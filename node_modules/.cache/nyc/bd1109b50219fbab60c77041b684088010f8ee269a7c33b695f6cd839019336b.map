{"version":3,"file":"/Users/fastpagamentos/development/Testes/graphql-2/src/graphql/dataloaders/UserLoader.ts","sources":["/Users/fastpagamentos/development/Testes/graphql-2/src/graphql/dataloaders/UserLoader.ts"],"names":[],"mappings":";;AAIA,MAAa,UAAU;IAEnB,MAAM,CAAC,UAAU,CAAC,IAAe,EAAE,MAAiC,EAAE,eAA+B;QAEjG,IAAI,GAAG,GAAc,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;QAEnD,OAAO,OAAO,CAAC,OAAO,CAClB,IAAI,CAAC,OAAO,CAAC;YACT,KAAK,EAAE;gBACH,EAAE,EAAE;oBACA,GAAG,EAAE,GAAG;iBACX;aACJ;YACD,UAAU,EAAE,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,IAAI,EAAE,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC;SAC9F,CAAC;aACG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,CAChE,CAAA;IACL,CAAC;CACJ;AAlBD,gCAkBC","sourcesContent":["import { RequestedField } from './../ast/RequestedField';\nimport { DataLoaderParam } from './../../interfaces/DataLoaderParamInterface';\nimport { UserModel, UserInstance } from \"../../models/UserModel\";\n\nexport class UserLoader {\n\n    static batchUsers(User: UserModel, params: DataLoaderParam<number>[], requestedFields: RequestedField): Promise<UserInstance[]> {\n\n        let ids: number [] = params.map(param => param.key)\n\n        return Promise.resolve(\n            User.findAll({\n                where: {\n                    id: {\n                        $in: ids\n                    }\n                },\n                attributes: requestedFields.getFields(params[0].info, { keep: ['id'], exclude: ['posts'] })\n            })\n                .then(rows => ids.map(id => rows.find(x => x.id === id)))\n        )\n    }\n}"]}