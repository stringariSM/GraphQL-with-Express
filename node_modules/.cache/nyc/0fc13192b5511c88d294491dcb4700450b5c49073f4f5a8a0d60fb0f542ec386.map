{"version":3,"file":"/Users/fastpagamentos/development/Testes/graphql-2/src/graphql/composable/composable.resolver.ts","sources":["/Users/fastpagamentos/development/Testes/graphql-2/src/graphql/composable/composable.resolver.ts"],"names":[],"mappings":";;AAKA,SAAgB,OAAO,CACnB,GAAG,KAAmD;IAGtD,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;QACpB,sCAAsC;QACtC,OAAO,CAAC,CAAC,EAAE;YACP,OAAO,CAAC,CAAC;QACb,CAAC,CAAC;KACL;IAED,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;QACpB,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;KACnB;IAED,MAAM,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IACrC,OAAO,CAAC,CAA0C,EAA2C,EAAE;QAC3F,IAAI,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QACrB,KAAK,IAAI,KAAK,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,KAAK,EAAE,EAAE;YACpD,MAAM,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;YACxB,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC;SACvB;QACD,OAAO,MAAM,CAAC;IAClB,CAAC,CAAA;AACL,CAAC;AAxBD,0BAwBC","sourcesContent":["import { GraphQLFieldResolver } from \"graphql\";\n\nexport type ComposableResolver<TSource, TContext> =\n    (fn: GraphQLFieldResolver<TSource, TContext>) => GraphQLFieldResolver<TSource, TContext>;\n\nexport function compose<TSource, TContext>(\n    ...funcs: Array<ComposableResolver<TSource, TContext>>\n): ComposableResolver<TSource, TContext> {\n\n    if (funcs.length === 0) {\n        // if no functions return the identity\n        return o => {\n            return o;\n        };\n    }\n\n    if (funcs.length === 1) {\n        return funcs[0];\n    }\n\n    const last = funcs[funcs.length - 1];\n    return (f: GraphQLFieldResolver<TSource, TContext>): GraphQLFieldResolver<TSource, TContext> => {\n        let result = last(f);\n        for (let index = funcs.length - 2; index >= 0; index--) {\n            const fn = funcs[index];\n            result = fn(result);\n        }\n        return result;\n    }\n}"]}