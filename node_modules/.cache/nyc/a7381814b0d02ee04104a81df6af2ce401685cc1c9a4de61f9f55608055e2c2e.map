{"version":3,"file":"/Users/fastpagamentos/development/Testes/graphql-2/src/graphql/composable/verify-token.resolver.ts","sources":["/Users/fastpagamentos/development/Testes/graphql-2/src/graphql/composable/verify-token.resolver.ts"],"names":[],"mappings":";;AAAA,iDAAmD;AAEnD,oCAAmC;AAItB,QAAA,mBAAmB,GAC5B,CAAC,QAAoD,EAA8C,EAAE;IAEjG,OAAO,CAAC,MAAM,EAAE,IAAI,EAAE,OAAwB,EAAE,IAAI,EAAE,EAAE;QAEpD,MAAM,KAAK,GAAW,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAA;QAE7F,OAAO,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,kBAAU,EAAE,EAAE,UAAU,EAAE,CAAC,OAAO,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,OAAY,EAAE,EAAE;YAClF,IAAI,CAAC,GAAG;gBACJ,OAAO,QAAQ,CAAC,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,CAAA;YAEhD,MAAM,IAAI,KAAK,CAAC,GAAG,GAAG,CAAC,IAAI,KAAK,GAAG,CAAC,OAAO,EAAE,CAAC,CAAA;QAClD,CAAC,CAAC,CAAA;IACN,CAAC,CAAA;AACL,CAAC,CAAA","sourcesContent":["import { JWT_SECRET } from './../../helpers/utils';\nimport { ComposableResolver } from './composable.resolver';\nimport * as jwt from 'jsonwebtoken'\nimport { ResolverContext } from '../../interfaces/ResolverContextInterface';\nimport { GraphQLFieldResolver } from 'graphql';\n\nexport const verifyTokenResolver: ComposableResolver<any, ResolverContext> =\n    (resolver: GraphQLFieldResolver<any, ResolverContext>): GraphQLFieldResolver<any, ResolverContext> => {\n\n        return (parent, args, context: ResolverContext, info) => {\n\n            const token: string = context.authorization ? context.authorization.split(' ')[1] : undefined\n\n            return jwt.verify(token, JWT_SECRET, { algorithms: ['RS256'] }, (err, payload: any) => {\n                if (!err)\n                    return resolver(parent, args, context, info)\n\n                throw new Error(`${err.name}: ${err.message}`)\n            })\n        }\n    }\n"]}