{"version":3,"file":"/Users/fastpagamentos/development/Testes/graphql-2/src/models/PostModel.ts","sources":["/Users/fastpagamentos/development/Testes/graphql-2/src/models/PostModel.ts"],"names":[],"mappings":";;AAEA,uCAA8D;AAkB9D,kBAAe,CAAC,SAA8B,EAAE,SAA8B,EAAa,EAAE;IACzF,MAAM,IAAI,GACN,SAAS,CAAC,MAAM,CAAC,MAAM,EAAE;QACrB,EAAE,EAAE;YACA,IAAI,EAAE,SAAS,CAAC,OAAO;YACvB,SAAS,EAAE,KAAK;YAChB,UAAU,EAAE,IAAI;YAChB,aAAa,EAAE,IAAI;SACtB;QACD,KAAK,EAAE;YACH,IAAI,EAAE,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC;YAC3B,SAAS,EAAE,KAAK;YAChB,QAAQ,EAAE;gBACN,QAAQ,EAAE,IAAI;aACjB;SACJ;QACD,OAAO,EAAE;YACL,IAAI,EAAE,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC;YAC3B,SAAS,EAAE,KAAK;YAChB,QAAQ,EAAE;gBACN,QAAQ,EAAE,IAAI;aACjB;SACJ;QACD,KAAK,EAAE;YACH,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC;gBACjB,MAAM,EAAE,MAAM;aACjB,CAAC;YACF,SAAS,EAAE,KAAK;SACnB;KACJ,EAAE;QACK,SAAS,EAAE,OAAO;KACrB,CAAC,CAAA;IAEV,IAAI,CAAC,SAAS,GAAG,CAAC,MAAuB,EAAQ,EAAE;QAC/C,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,EAAE;YACxB,UAAU,EAAE;gBACR,SAAS,EAAE,KAAK;gBAChB,KAAK,EAAE,QAAQ;gBACf,IAAI,EAAE,QAAQ;aACjB;SACJ,CAAC,CAAA;IACN,CAAC,CAAA;IAED,IAAI,CAAC,SAAS,CAAC,UAAU,GAAG,CAAC,eAAuB,EAAE,QAAgB,EAAW,EAAE;QAC/E,OAAO,sBAAW,CAAC,QAAQ,EAAE,eAAe,CAAC,CAAA;IACjD,CAAC,CAAA;IAED,OAAO,IAAI,CAAC;AAChB,CAAC,CAAA","sourcesContent":["import { UserModel } from './UserModel';\nimport { BaseModelInterface } from './../interfaces/BaseModelInterface';\nimport { genSaltSync, hashSync, compareSync } from 'bcryptjs';\nimport * as Sequelize from 'sequelize';\nimport { ModelsInterface } from '../interfaces/ModelsInterface';\n\nexport interface PostAttributes {\n    id?: number;\n    title?: string;\n    content?: string;\n    photo?: string;\n    author?: number;\n    createdAt?: string;\n    updatedAt?: string;\n}\n\nexport interface PostInstance extends Sequelize.Instance<PostAttributes>, PostAttributes {}\n\nexport interface PostModel extends BaseModelInterface, Sequelize.Model<PostInstance, PostAttributes> {}\n\nexport default (sequelize: Sequelize.Sequelize, DataTypes: Sequelize.DataTypes): PostModel => {\n    const Post: PostModel =\n        sequelize.define('Post', {\n            id: {\n                type: DataTypes.INTEGER,\n                allowNull: false,\n                primaryKey: true,\n                autoIncrement: true\n            },\n            title: {\n                type: DataTypes.STRING(255),\n                allowNull: false,\n                validate: {\n                    notEmpty: true\n                }\n            },\n            content: {\n                type: DataTypes.STRING(255),\n                allowNull: false,\n                validate: {\n                    notEmpty: true\n                }\n            },\n            photo: {\n                type: DataTypes.BLOB({\n                    length: 'long'\n                }),\n                allowNull: false,\n            },\n        }, {\n                tableName: 'posts'\n            })\n\n    Post.associate = (models: ModelsInterface): void => {\n        Post.belongsTo(models.User, {\n            foreignKey: {\n                allowNull: false,\n                field: 'author',\n                name: 'author'\n            }\n        })\n    }\n\n    Post.prototype.isPassword = (encodedPassword: string, password: string): boolean => {\n        return compareSync(password, encodedPassword)\n    }\n\n    return Post;\n}"]}