{"version":3,"file":"/Users/fastpagamentos/development/Testes/graphql-2/src/graphql/composable/auth.resolver.ts","sources":["/Users/fastpagamentos/development/Testes/graphql-2/src/graphql/composable/auth.resolver.ts"],"names":[],"mappings":";;AAGA,mEAA8D;AAEjD,QAAA,YAAY,GACrB,CAAC,QAAoD,EAA8C,EAAE;IAEjG,OAAO,CAAC,MAAM,EAAE,IAAI,EAAE,OAAwB,EAAE,IAAI,EAAE,EAAE;QACpD,IAAI,OAAO,CAAC,QAAQ,IAAI,OAAO,CAAC,aAAa,EAAE;YAC3C,OAAO,QAAQ,CAAC,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,CAAA;SAC/C;QAED,qCAAqC;QACrC,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAA;IACxD,CAAC,CAAA;AAEL,CAAC,CAAA;AAEQ,QAAA,aAAa,GAAG,CAAC,oBAAY,EAAE,2CAAmB,CAAC,CAAA","sourcesContent":["import { ComposableResolver } from './composable.resolver';\nimport { ResolverContext } from '../../interfaces/ResolverContextInterface';\nimport { GraphQLFieldResolver } from 'graphql';\nimport { verifyTokenResolver } from './verify-token.resolver';\n\nexport const authResolver: ComposableResolver<any, ResolverContext> =\n    (resolver: GraphQLFieldResolver<any, ResolverContext>): GraphQLFieldResolver<any, ResolverContext> => {\n\n        return (parent, args, context: ResolverContext, info) => {\n            if (context.authUser || context.authorization) {\n                return resolver(parent, args, context, info)\n            }\n\n            //Joga uma mensagem de n√£o autorizado\n            throw new Error('Unauthorized! Token not provided.')\n        }\n\n    }\n\nexport const authResolvers = [authResolver, verifyTokenResolver]"]}