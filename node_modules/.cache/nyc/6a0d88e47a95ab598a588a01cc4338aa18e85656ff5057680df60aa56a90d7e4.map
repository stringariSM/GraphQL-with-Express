{"version":3,"file":"/Users/fastpagamentos/development/Testes/graphql-2/src/graphql/dataloaders/DataLoaderFactory.ts","sources":["/Users/fastpagamentos/development/Testes/graphql-2/src/graphql/dataloaders/DataLoaderFactory.ts"],"names":[],"mappings":";;AAGA,yCAAwC;AAIxC,6CAA0C;AAE1C,6CAA0C;AAE1C,MAAa,iBAAiB;IAE1B,YACY,EAAgB,EAChB,eAA+B;QAD/B,OAAE,GAAF,EAAE,CAAc;QAChB,oBAAe,GAAf,eAAe,CAAgB;IACxC,CAAC;IAEJ,UAAU;QACN,OAAO;YACH,UAAU,EAAE,IAAI,UAAU,CACtB,CAAC,MAAiC,EAAE,EAAE,CAAC,uBAAU,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,eAAe,CAAC,EACxG,EAAI,UAAU,EAAE,CAAC,KAAgC,EAAE,EAAE,CAAC,KAAK,CAAC,IAAI,EAAG,CACtE;YACD,UAAU,EAAE,IAAI,UAAU,CACtB,CAAC,MAAiC,EAAE,EAAE,CAAC,uBAAU,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,eAAe,CAAC,EACxG,EAAE,UAAU,EAAE,CAAC,KAAgC,EAAE,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,CACnE;SACJ,CAAA;IACL,CAAC;CAEJ;AApBD,8CAoBC","sourcesContent":["import { DataLoaderParam } from './../../interfaces/DataLoaderParamInterface';\nimport { RequestedField } from './../ast/RequestedField';\nimport { UserInstance } from './../../models/UserModel';\nimport * as DataLoader from 'dataloader'\n\nimport { DataLoaders } from './../../interfaces/DataLoadersInterface';\nimport { DbConnection } from './../../interfaces/DbConnectionInterface';\nimport { UserLoader } from './UserLoader';\nimport { PostInstance } from '../../models/PostModel';\nimport { PostLoader } from './PostLoader';\n\nexport class DataLoaderFactory {\n\n    constructor(\n        private db: DbConnection,\n        private requestedFields: RequestedField\n    ) {}\n\n    getLoaders(): DataLoaders {\n        return {\n            userLoader: new DataLoader<DataLoaderParam<number>, UserInstance>(\n                (params: DataLoaderParam<number>[]) => UserLoader.batchUsers(this.db.User, params, this.requestedFields),\n                {   cacheKeyFn: (param: DataLoaderParam<number>[]) => param.keys  }\n            ),\n            postLoader: new DataLoader<DataLoaderParam<number>, PostInstance>(\n                (params: DataLoaderParam<number>[]) => PostLoader.batchPosts(this.db.Post, params, this.requestedFields),\n                { cacheKeyFn: (param: DataLoaderParam<number>[]) => param.keys }\n            )\n        }\n    }\n\n}"]}