{"version":3,"file":"/Users/fastpagamentos/development/Testes/graphql-2/src/helpers/utils.ts","sources":["/Users/fastpagamentos/development/Testes/graphql-2/src/helpers/utils.ts"],"names":[],"mappings":";;AACA,yBAAyB;AACzB,6BAA6B;AAEhB,QAAA,aAAa,GAAG,CAAC,GAAoB,EAA6B,EAAE;IAC7E,IAAI,IAAI,GAAW,CAAC,OAAO,GAAG,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;IACnE,IAAI,KAAK,CAAC,IAAI,CAAC;QAAE,OAAO,GAAG,CAAC;SACvB,IAAI,IAAI,IAAI,CAAC;QAAE,OAAO,IAAI,CAAC;;QAC3B,OAAO,KAAK,CAAC;AACtB,CAAC,CAAA;AAEY,QAAA,OAAO,GAAG,CAAC,MAAc,EAAE,EAAE;IACtC,OAAO,CAAC,KAA4B,EAAQ,EAAE;QAC1C,IAAI,IAAI,GAAoB,MAAM,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC;QACxD,IAAI,KAAK,CAAC,OAAO,KAAK,QAAQ;YAAE,MAAM,KAAK,CAAC;QAC5C,IAAI,IAAI,GAAG,CAAC,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,IAAI,EAAE,CAAC,CAAC,CAAC,QAAQ,IAAI,EAAE,CAAC;QACxE,QAAO,KAAK,CAAC,IAAI,EAAE;YACf,KAAK,QAAQ;gBACT,OAAO,CAAC,KAAK,CAAC,GAAG,IAAI,+BAA+B,CAAC,CAAC;gBACtD,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAChB,MAAM;YACV,KAAK,YAAY;gBACb,OAAO,CAAC,KAAK,CAAC,GAAG,IAAI,oBAAoB,CAAC,CAAC;gBAC3C,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAChB,MAAM;YACV;gBACI,MAAM,KAAK,CAAC;SACnB;IACL,CAAC,CAAA;AACL,CAAC,CAAA;AAEY,QAAA,WAAW,GAAG,CAAC,MAAc,EAAE,EAAE;IAC1C,OAAO,GAAS,EAAE;QACd,IAAI,IAAI,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC;QAC5B,IAAI,IAAI,GAAG,CAAC,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;QAEnE,OAAO,CAAC,GAAG,CAAC,iDAAiD,CAAC,CAAC;QAC/D,OAAO,CAAC,GAAG,CAAC,YAAY,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACjD,OAAO,CAAC,GAAG,CAAC,8BAA8B,GAAG,IAAI,CAAC,CAAC;QACnD,OAAO,CAAC,GAAG,CAAC,iDAAiD,CAAC,CAAC;IACnE,CAAC,CAAA;AACL,CAAC,CAAA;AAEY,QAAA,WAAW,GAAG,CAAC,KAAY,EAAE,EAAE;IACxC,IAAI,YAAY,GAAW,GAAG,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,OAAO,EAAE,CAAA;IAC5D,IAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,MAAM;QAC9B,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC,CAAA;IAC/B,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,YAAY,CAAC,CAAC,CAAA;AAClD,CAAC,CAAA;AAEY,QAAA,UAAU,GAAG,CAAC,SAAkB,EAAE,OAAe,EAAQ,EAAE;IACpE,IAAG,SAAS;QACR,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,CAAA;AAChC,CAAC,CAAA;AAGY,QAAA,UAAU,GAAW,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,6BAA6B,CAAC,CAAC,CAAA","sourcesContent":["import { Server } from \"http\";\nimport * as fs from 'fs';\nimport * as path from 'path';\n\nexport const normalizePort = (val: number | string): number | string | boolean => {\n    let port: number = (typeof val === 'string') ? parseInt(val) : val;\n    if (isNaN(port)) return val;\n    else if (port >= 0) return port;\n    else return false;\n}\n\nexport const onError = (server: Server) => {\n    return (error: NodeJS.ErrnoException): void => {\n        let port: number | string = server.address().toString();\n        if (error.syscall !== 'listen') throw error;\n        let bind = (typeof port === 'string') ? `pipe ${port}` : `port ${port}`;\n        switch(error.code) {\n            case 'EACCES':\n                console.error(`${bind} requires elevated privileges`);\n                process.exit(1);\n                break;\n            case 'EADDRINUSE':\n                console.error(`${bind} is already in use`);\n                process.exit(1);\n                break;\n            default:\n                throw error;\n        }\n    }\n}\n\nexport const onListening = (server: Server) => {\n    return (): void => {\n        let addr = server.address();\n        let bind = (typeof addr === 'string') ? `${addr}` : `${addr.port}`;\n\n        console.log('-----------------------------------------------');\n        console.log(\"Ambiente: \" + process.env.NODE_ENV);\n        console.log(\"Rodando em http://localhost:\" + bind);\n        console.log('-----------------------------------------------');\n    }\n}\n\nexport const handleError = (error: Error) => {\n    let errorMessage: string = `${error.name}: ${error.message}`\n    if(process.env.NODE_ENV !== 'test')\n        console.error(errorMessage)\n    return Promise.reject(new Error(errorMessage))\n}\n\nexport const throwError = (condition: boolean, message: string): void => {\n    if(condition)\n        throw new Error(message)\n}\n\n\nexport const JWT_SECRET: Buffer = fs.readFileSync(path.resolve(__dirname, '../config/keys/jwtRS256.key'))"]}